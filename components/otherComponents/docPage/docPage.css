.docPageContainer {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  width: 100%;
  max-width: 95rem;
  flex: 1 1 auto;
  justify-content: center;
}

.docTableContents {
  display: none;

  .content1 {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: 50vw;
    border-right-width: 1px;
    border-right-style: solid;
    border-right-color: var(--secondary-border-color);
  }

  .content2 {
    position: absolute;
    bottom: 0;
    right: 0;
    top: 4rem;
    display: none;
    height: 3rem;
    width: 1px;
    background-image: linear-gradient(to top, var(--tw-gradient-stops));
    --tw-gradient-from: #1e293b var(--tw-gradient-from-position);
    --tw-gradient-to: rgba(30, 41, 59, 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  .content3 {
    
    position: absolute;
    
    bottom: 0;
    
    right: 0;
    
    top: 7rem;
    
    display: none;
    
    width: 1px;
    
    
    background-color: rgb(30 41 59 / 1);
  }

  .mainTableContent {
    
    position: sticky;
    
    top: 4.75rem;
    
    margin-left: -0.125rem;
    
    height: calc(100vh - 4.75rem);
    
    width: 14rem;
    
    overflow-y: auto;
    
    overflow-x: hidden;
    
    padding-top: 4rem;
    padding-bottom: 4rem;
    
    padding-left: 0.125rem;
    
    padding-right: 1rem;

    .mainContentNav {
      
      font-size: 1rem;
      line-height: 2rem;

      .lister > :not([hidden]) ~ :not([hidden]) {
        
        --tw-space-y-reverse: 0;
        margin-top: calc(2.25rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(2.25rem * var(--tw-space-y-reverse));
      }

      
      .listTitle {
        
        font-family: var(--font-lexend);
        font-feature-settings: "ss01";
        
        font-weight: 500;
        
        
        color: rgb(15 23 42 / 1);
      }

      .subLister {
        
        margin-top: 0.5rem;
        
        border-left-width: 2px;
        
        
        border-color: rgb(241 245 249 / 1);

        .listItem {
          
          position: relative;
          .linker {
            
            display: block;
            
            width: 100%;
            
            padding-left: 0.875rem;
            
            
            color: rgb(100 116 139 / 1);
            
            
          }
          linker:before {
            
            content: var(--tw-content);
            pointer-events: none;
            
            content: var(--tw-content);
            position: absolute;
            
            content: var(--tw-content);
            left: -0.25rem;
            
            content: var(--tw-content);
            top: 50%;
            
            content: var(--tw-content);
            height: 0.25rem;
            
            content: var(--tw-content);
            height: 0.375rem;
            
            content: var(--tw-content);
            --tw-translate-y: -50%;
            transform: translate(var(--tw-translate-x), var(--tw-translate-y))
              rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
              scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
            
            content: var(--tw-content);
            border-radius: 9999px;
            
            content: var(--tw-content);
            display: none;
            
            content: var(--tw-content);
            
            background-color: rgb(203 213 225 / 1);
          }

          .activeLinker {
            
            display: block;
            
            width: 100%;
            
            padding-left: 0.875rem;
            
            font-weight: 600;
            color: var(--primary-color);

            &::before {
              pointer-events: none;
              
              position: absolute;
              
              left: -0.25rem;
              
              top: 50%;
              
              height: 0.25rem;
              
              height: 0.375rem;
              
              --tw-translate-y: -50%;
              transform: translate(var(--tw-translate-x), var(--tw-translate-y))
                rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
                scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
              
              border-radius: 9999px;
              content: "";
              background-color: var(--primary-color)
            }
          }

          activeLinker:before {

          }
        }
      }

      .subLister > :not([hidden]) ~ :not([hidden]) {
        --tw-space-y-reverse: 0;
        margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
      }
    }
  }
}

.docMainArticle {
  
  min-width: 0;
  
  max-width: 42rem;
  
  flex: 1 1 auto;
  
  padding-left: 1rem;
  padding-right: 1rem;
  
  padding-top: 4rem;
  padding-bottom: 4rem;

  .articleHeader {
    
    margin-bottom: 2.25rem;

    .articleSubtitle {
      
      font-family: var(--font-lexend);
      font-feature-settings: "ss01";
      
      font-size: 0.875rem;
      line-height: 1.5rem;
      
      font-weight: 500;
      color: var(--primary-color);
    }

    .articleTitle {
      
      font-family: var(--font-lexend);
      font-feature-settings: "ss01";
      
      font-size: 2rem;
      line-height: 2.5rem;
      
      letter-spacing: -0.025em;
      
      
      color: rgb(15 23 42 / 1);
    }
  }
  .articleHeader > :not([hidden]) ~ :not([hidden]) {
    
    --tw-space-y-reverse: 0;
    margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
  }

  .articleBody {
    
    color: var(--tw-prose-body);
    max-width: 65ch;
    
    --tw-prose-body: #334155;
    --tw-prose-headings: #0f172a;
    --tw-prose-lead: #475569;
    --tw-prose-links: #0f172a;
    --tw-prose-bold: #0f172a;
    --tw-prose-counters: #64748b;
    --tw-prose-bullets: #cbd5e1;
    --tw-prose-hr: #e2e8f0;
    --tw-prose-quotes: #0f172a;
    --tw-prose-quote-borders: #e2e8f0;
    --tw-prose-captions: #64748b;
    --tw-prose-kbd: #0f172a;
    --tw-prose-kbd-shadows: 15 23 42;
    --tw-prose-code: #0f172a;
    --tw-prose-pre-code: #e2e8f0;
    --tw-prose-pre-bg: #1e293b;
    --tw-prose-th-borders: #cbd5e1;
    --tw-prose-td-borders: #e2e8f0;
    --tw-prose-invert-body: #cbd5e1;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #94a3b8;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #94a3b8;
    --tw-prose-invert-bullets: #475569;
    --tw-prose-invert-hr: #334155;
    --tw-prose-invert-quotes: #f1f5f9;
    --tw-prose-invert-quote-borders: #334155;
    --tw-prose-invert-captions: #94a3b8;
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #cbd5e1;
    --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
    --tw-prose-invert-th-borders: #475569;
    --tw-prose-invert-td-borders: #334155;
    
    max-width: none;
    
    
    
    

  }
  
  .articleBody
    :is(:where(a):not(:where([class~="not-prose"], [class~="not-prose"] *))) {
    
    font-weight: 600;
    
    text-decoration-line: none;
  }

  .articleBody
    :is(
      :where(h1, h2, h3, h4, h5, h6, th):not(
          :where([class~="not-prose"], [class~="not-prose"] *)
        )
    ) {
    scroll-margin-top: 7rem;
    font-family: var(--font-lexend);
    font-feature-settings: "ss01";
    font-weight: 400;
  }

  .articleBody
    :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .articleBody
    :where([class~="lead"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  .articleBody
    :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }
  .articleBody
    :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .articleBody
    :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }
  .articleBody
    :where(blockquote strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .articleBody
    :where(thead th strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .articleBody
    :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  .articleBody
    :where(ol[type="A"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }
  .articleBody
    :where(ol[type="a"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }
  .articleBody
    :where(ol[type="A s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-alpha;
  }
  .articleBody
    :where(ol[type="a s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-alpha;
  }
  .articleBody
    :where(ol[type="I"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }
  .articleBody
    :where(ol[type="i"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }
  .articleBody
    :where(ol[type="I s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: upper-roman;
  }
  .articleBody
    :where(ol[type="i s"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: lower-roman;
  }
  .articleBody
    :where(ol[type="1"]):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    list-style-type: decimal;
  }
  .articleBody
    :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  .articleBody
    :where(ol > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }
  .articleBody
    :where(ul > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: var(--tw-prose-bullets);
  }
  .articleBody
    :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
  }
  .articleBody
    :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .articleBody
    :where(blockquote):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-left-width: 0.25rem;
    border-left-color: var(--tw-prose-quote-borders);
    quotes: "\201C""\201D""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
  }
  .articleBody
    :where(blockquote p:first-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before {
    content: open-quote;
  }
  .articleBody
    :where(blockquote p:last-of-type):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: close-quote;
  }
  .articleBody
    :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }
  .articleBody
    :where(h1 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 900;
    color: inherit;
  }
  .articleBody
    :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }
  .articleBody
    :where(h2 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 800;
    color: inherit;
  }
  .articleBody
    :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  .articleBody
    :where(h3 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 700;
    color: inherit;
  }
  .articleBody
    :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }
  .articleBody
    :where(h4 strong):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    font-weight: 700;
    color: inherit;
  }
  .articleBody
    :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .articleBody
    :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .articleBody
    :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
      0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
    font-size: 0.875em;
    border-radius: 0.3125rem;
    padding: 0.1875em 0.375em;
  }
  .articleBody
    :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
    background-color: rgb(208, 208, 208);
    padding: .1rem .25rem;
    border-radius: 4px;
  }
  .articleBody
    :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }
  .articleBody
    :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }
  .articleBody
    :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  .articleBody
    :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  .articleBody
    :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }
  .articleBody
    :where(blockquote code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .articleBody
    :where(thead th code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: inherit;
  }
  .articleBody
    :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding: 0.8571429em 1.1428571em;
  }

  .articleBody
    :is(:where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *))) {
    
    
    
    border-radius: 0.75rem;
    
    background-color: rgb(15 23 42 / 1);
    --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -4px rgba(0, 0, 0, 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }


  .articleBody
    :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  .articleBody
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):before {
    content: none;
  }
  .articleBody
    :where(pre code):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ):after {
    content: none;
  }
  .articleBody
    :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }
  .articleBody
    :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .articleBody
    :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  .articleBody
    :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .articleBody
    :where(tbody tr:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    border-bottom-width: 0;
  }
  .articleBody
    :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: baseline;
  }
  .articleBody
    :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .articleBody
    :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    vertical-align: top;
  }
  .articleBody
    :where(figure > *):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .articleBody
    :where(figcaption):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }
  .articleBody
    :where(picture > img):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .articleBody
    :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .articleBody
    :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .articleBody
    :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-left: 0.375em;
  }
  .articleBody
    :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-left: 0.375em;
  }
  .articleBody
    :where(.articleBody > ul > li p):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .articleBody
    :where(.articleBody > ul > li > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .articleBody
    :where(.articleBody > ul > li > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .articleBody
    :where(.articleBody > ol > li > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 1.25em;
  }
  .articleBody
    :where(.articleBody > ol > li > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 1.25em;
  }
  .articleBody
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .articleBody
    :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .articleBody
    :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0.5em;
    padding-left: 1.625em;
  }
  .articleBody
    :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .articleBody
    :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .articleBody
    :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .articleBody
    :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }
  .articleBody
    :where(thead th:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-left: 0;
  }
  .articleBody
    :where(thead th:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-right: 0;
  }
  .articleBody
    :where(tbody td, tfoot td):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding: 0.5714286em;
  }
  .articleBody
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-left: 0;
  }
  .articleBody
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    padding-right: 0;
  }
  .articleBody
    :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .articleBody
    :where(.articleBody > :first-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-top: 0;
  }
  .articleBody
    :where(.articleBody > :last-child):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    ) {
    margin-bottom: 0;
  }

  .articleNavigator {
    
    margin-top: 3rem;
    
    display: flex;
    
    border-top-width: 1px;
    
    
    border-color: rgb(226 232 240 / 1);
    
    padding-top: 1.5rem;

    .previousText {
      
      font-family: var(--font-lexend);
      font-feature-settings: "ss01";
      
      font-size: 0.875rem;
      line-height: 1.5rem;
      
      font-weight: 500;
      
      
      color: rgb(15 23 42 / 1);
    }

    .previousLinkContainer {
      
      margin-top: 0.25rem;

      .previousLink {
        
        display: flex;
        
        align-items: center;
        
        -moz-column-gap: 0.25rem;
        column-gap: 0.25rem;
        
        font-size: 1rem;
        line-height: 2rem;
        
        font-weight: 600;
        
        
        color: rgb(100 116 139 / 1);
        
        
        flex-direction: row-reverse;

        .svger {
          
          height: 1rem;
          
          width: 1rem;
          
          flex: none;
          
          fill: currentColor;
          
          --tw-scale-x: -1;
          transform: translate(var(--tw-translate-x), var(--tw-translate-y))
            rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))
            skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
            scaleY(var(--tw-scale-y));
        }
      }
    }

    .nextContainer {
      
      margin-left: auto;
      
      text-align: right;

      .nextText {
        
        font-family: var(--font-lexend);
        font-feature-settings: "ss01";
        
        font-size: 0.875rem;
        line-height: 1.5rem;
        
        font-weight: 500;
        
        
        color: rgb(15 23 42 / 1);
      }

      .nextLinkContainer {
        
        margin-top: 0.25rem;

        .nextLink {
          
          display: flex;
          
          align-items: center;
          
          -moz-column-gap: 0.25rem;
          column-gap: 0.25rem;
          
          font-size: 1rem;
          line-height: 2rem;
          
          font-weight: 600;
          
          
          color: rgb(100 116 139 / 1);
          

          .svger {
            
            height: 1rem;
            
            width: 1rem;
            
            flex: none;
            
            fill: currentColor;
          }
        }
      }
    }
  }
}

.pageTableContents {
  
  display: none;

  .naver {
    
    width: 14rem;

    .title {
      
      font-family: var(--font-lexend);
      font-feature-settings: "ss01";
      
      font-size: 0.875rem;
      line-height: 1.5rem;
      
      font-weight: 500;
      
      
      color: rgb(15 23 42 / 1);
    }

    .contentsList {
      
      margin-top: 1rem;
      
      font-size: 0.875rem;
      line-height: 1.5rem;

      .topLink {
        color: var(--primary-color)
      }

      .botLink {
        
        font-weight: 400;
        
        
        color: rgb(100 116 139 / 1);
        
      }

      .contentsSublist {
        
        margin-top: 0.5rem;
        
        padding-left: 1.25rem;
        
        
        color: rgb(100 116 139 / 1);

        .sublistLink {
          
        }
      }

      .contentsSublist > :not([hidden]) ~ :not([hidden]) {
        
        --tw-space-y-reverse: 0;
        margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
        margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
      }
    }

    .contentsList > :not([hidden]) ~ :not([hidden]) {
      
      --tw-space-y-reverse: 0;
      margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
      margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
    }
  }
}

@media (min-width: 640px) {
  .docPageContainer {
    
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
}

@media (min-width: 768px) {
}

@media (min-width: 1024px) {
  .docPageContainer {
    
    padding-left: 1.3rem;
    padding-right: 1.3rem;
  }

  .docTableContents {
    
    position: relative;
    
    display: block;
    
    flex: none;

    .mainTableContent {
      .mainContentNav {
        
        font-size: 0.875rem;
        line-height: 1.5rem;

        .subLister {
          
          margin-top: 1rem;
          
          
          border-color: rgb(226 232 240 / 1);
        }

        .subLister > :not([hidden]) ~ :not([hidden]) {
          
          --tw-space-y-reverse: 0;
          margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
          margin-bottom: calc(1rem * var(--tw-space-y-reverse));
        }
      }
    }
  }

  .docMainArticle {
    
    max-width: none;
    
    padding-left: 2rem;
    
    padding-right: 0;
  }
}

@media (min-width: 1280px) {
  .docPageContainer {
    
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .docTableContents {
    .mainTableContent {
      
      width: 16rem;
      
      padding-right: 2rem;
    }
  }

  .pageTableContents {
    
    position: sticky;
    
    top: 4.75rem;
    
    margin-right: -1.5rem;
    
    display: block;
    
    height: calc(100vh - 4.75rem);
    
    flex: none;
    
    overflow-y: auto;
    
    padding-top: 4rem;
    padding-bottom: 4rem;
    
    padding-right: 1.5rem;
  }

  .docMainArticle {
    
    padding-left: 4rem;
    padding-right: 4rem;
  }
}
